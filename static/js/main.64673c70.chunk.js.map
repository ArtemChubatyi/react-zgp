{"version":3,"sources":["images/preloader.gif","images/video.mp4","Background.jsx","Services.jsx","Scene.js","Interface.js","MenuPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Services","react_default","a","createElement","className","Home","Fragment","autoPlay","muted","loop","src","video","type","Background","react_router","path","exact","component","_ref","isPageLoaded","getServices","src_Services","Scene","id","data-depth","Interface","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setupInterface","setTimeout","setState","menuButtonLineClass","chatButtonClass","openMenuButtonClass","state","menuButtonClass","isMenuOpened","onClick","handleMenuOpen","aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","fill","d","Component","MenuPage","menuPageClass","react_router_dom","to","href","App","checkPageLoading","window","onload","isLoaded","preloaderScreenClass","preloader","alt","src_Background","src_Scene","src_Interface","src_MenuPage","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.64673c70.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/preloader.d9224981.gif\";","module.exports = __webpack_public_path__ + \"static/media/video.1175895b.mp4\";","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nimport video from  './images/video.mp4'\r\n\r\nfunction Services() {\r\n    return (<div className=\"background\"><div className=\"gradient\"/><div className=\"noise\"/></div>)\r\n}\r\n\r\n\r\nlet Home = () => <><div className=\"background\"><video className={\"fullscreen-bg__video\"} autoPlay={true} muted={true} loop={true}><source src={video} type=\"video/mp4\"/></video><div className=\"overlay\"/><div className=\"gradient\"/><div className=\"noise\"/></div></>\r\n\r\nfunction Background() {\r\n    return (\r\n        <>\r\n            <Route path=\"/react-zgp\" exact component={Home} />\r\n            <Route path=\"/services\" component={Services} />\r\n        </>\r\n    );\r\n}\r\nexport default Background;","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nfunction Services ({isPageLoaded}) {\r\n    return (\r\n        <h1>Services</h1>\r\n);\r\n\r\n}\r\nexport default Services;","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport Services from './Services';\r\n\r\nfunction getServices() {\r\n    return <Services />\r\n}\r\n\r\nfunction Home() {\r\n    return <div className=\"textlogo\"><div className=\"text\"></div></div>\r\n}\r\n\r\nfunction Scene ({isPageLoaded}) {\r\n    return (\r\n        <div id=\"scene\" className={(isPageLoaded) ? \"visible\" : \"invisible\"}>\r\n            <div data-depth=\"0.2\" className={\"layer\"}>\r\n                <Route path=\"/react-zgp\" exact component={Home} />\r\n                <Route path=\"/services\" component={getServices} />\r\n            </div>\r\n        </div>\r\n);\r\n\r\n}\r\nexport default Scene;","import React, {Component} from 'react';\r\n\r\nclass Interface extends Component  {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            menuButtonLineClass: \"hamburger-line compressed\",\r\n            menuButtonClass: \"menu-button\",\r\n            chatButtonClass: \"chat-button hided\",\r\n            openMenuButtonClass: \"open-menu-button hided\",\r\n            isMenuOpened: false\r\n        };\r\n    }\r\n\r\n    setupInterface = () => {\r\n        if (this.props.isPageLoaded) {\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    menuButtonLineClass: \"hamburger-line\",\r\n                    chatButtonClass: \"chat-button\",\r\n                    openMenuButtonClass: \"open-menu-button\"\r\n                })\r\n            }, 1000)\r\n        }\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                {this.setupInterface()}\r\n                <div className={this.state.menuButtonClass} onClick={this.props.handleMenuOpen}>\r\n\r\n                    <div className={this.state.menuButtonLineClass}></div>\r\n                    <div className={this.state.menuButtonLineClass}></div>\r\n                    <div className={this.state.menuButtonLineClass}></div>\r\n                    <div className={this.state.menuButtonLineClass}></div>\r\n                </div>\r\n                <div className={this.state.chatButtonClass}>\r\n                    <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fal\" data-icon=\"envelope\" role=\"img\"\r\n                         xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"\r\n                         className=\"svg-inline--fa fa-envelope fa-w-16 fa-3x\">\r\n                        <path fill=\"white\"\r\n                              d=\"M464 64H48C21.5 64 0 85.5 0 112v288c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM48 96h416c8.8 0 16 7.2 16 16v41.4c-21.9 18.5-53.2 44-150.6 121.3-16.9 13.4-50.2 45.7-73.4 45.3-23.2.4-56.6-31.9-73.4-45.3C85.2 197.4 53.9 171.9 32 153.4V112c0-8.8 7.2-16 16-16zm416 320H48c-8.8 0-16-7.2-16-16V195c22.8 18.7 58.8 47.6 130.7 104.7 20.5 16.4 56.7 52.5 93.3 52.3 36.4.3 72.3-35.5 93.3-52.3 71.9-57.1 107.9-86 130.7-104.7v205c0 8.8-7.2 16-16 16z\"\r\n                              className=\"\"></path>\r\n                    </svg>\r\n                </div>\r\n                <div className={this.state.openMenuButtonClass}>\r\n                    <p className=\"open-line\">Открыть</p>\r\n                    <div className=\"vertical-line\"></div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Interface;","import React, {Component} from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\n\r\nclass MenuPage extends Component  {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render () {\r\n        let {menuPageClass} = this.props;\r\n        return (\r\n            <>\r\n                <div className={menuPageClass}>\r\n                    <ul className=\"menu-list\">\r\n                        <li className={(this.props.isMenuOpened) ? \"menu-link showed\" : \"menu-link hided\"}><Link to=\"/services\">About</Link></li>\r\n                        <li className={(this.props.isMenuOpened) ? \"menu-link showed\" : \"menu-link hided\"}><a href=\"javascript:void(0)\">Реализация</a></li>\r\n                        <li className={(this.props.isMenuOpened) ? \"menu-link showed\" : \"menu-link hided\"}><a href=\"javascript:void(0)\">Технологии</a></li>\r\n                        <li className={(this.props.isMenuOpened) ? \"menu-link showed\" : \"menu-link hided\"}><a href=\"javascript:void(0)\">Галерея</a></li>\r\n                        <li className={(this.props.isMenuOpened) ? \"menu-link showed\" : \"menu-link hided\"}><a href=\"javascript:void(0)\">Блог</a></li>\r\n                        <li className={(this.props.isMenuOpened) ? \"menu-link showed\" : \"menu-link hided\"}><a href=\"javascript:void(0)\">Контакты</a></li>\r\n                    </ul>\r\n                    <div className={(this.props.isMenuOpened) ? \"menu-footer showed\" : \"menu-footer hided\"}>\r\n                        <div className=\"lang\">\r\n                            <span className=\"ua\">UA</span>/<span className=\"en\">EN</span>/<span className=\"ru\">RU</span>\r\n                        </div>\r\n                        <div className=\"info\">IBAN BE94 3631 3792 1714 | TVA 0563 860 901</div>\r\n                        <div className=\"social-links\">\r\n                            <span className=\"facebook\">Facebook</span>/<span className=\"span linkedin\">LinkedIn</span>/<span className=\"instagram\">Instagram</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className={(this.props.isMenuOpened) ? \"close-button showed\" : \"close-button hided\"}  onClick={this.props.handleMenuOpen}>\r\n                        <div className=\"close-button-line first\"></div>\r\n                        <div className=\"close-button-line second\"></div>\r\n                    </div>\r\n                    <div className={(this.props.isMenuOpened) ? \"menu-logo showed\" : \"menu-logo hided\"}></div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default MenuPage;","import React, {Component} from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport preloader from './images/preloader.gif';\r\nimport './App.css';\r\nimport Background from './Background.jsx';\r\nimport Scene from './Scene.js';\r\nimport Interface from './Interface.js';\r\nimport MenuPage from './MenuPage.js'\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        isLoaded: false,\r\n        isMenuOpened: false,\r\n        menuPageClass: \"menu-page\"\r\n    };\r\n  }\r\n\r\n  checkPageLoading = () => {\r\n    window.onload = () => {\r\n      setTimeout(()=>{\r\n        this.setState({\r\n          isLoaded: true\r\n        })\r\n      }, 1000)\r\n    }\r\n  };\r\n\r\n  handleMenuOpen = () => {\r\n      if(!this.state.isMenuOpened) {\r\n          this.setState({\r\n              menuPageClass: \"menu-page opened\",\r\n              isMenuOpened: !this.state.isMenuOpened\r\n          });\r\n      } else {\r\n          this.setState({\r\n              menuPageClass: \"menu-page hided\",\r\n              isMenuOpened: !this.state.isMenuOpened\r\n          });\r\n      }\r\n\r\n  };\r\n\r\n  componentDidMount() {\r\n\r\n  }\r\n\r\n  render () {\r\n    let preloaderScreenClass = `preloader-screen`;\r\n    if (this.state.isLoaded === true) {\r\n      preloaderScreenClass = `preloader-screen loaded`\r\n    }\r\n    return (\r\n        <div className=\"App\">\r\n          <div className={preloaderScreenClass}>\r\n            <img src={preloader} alt=\"site preloader\" className=\"preloader\"/>\r\n          </div>\r\n          {this.checkPageLoading()}\r\n          <Router>\r\n          <div className=\"main-page\">\r\n            <Background />\r\n          </div>\r\n          <Scene isPageLoaded={this.state.isLoaded} />\r\n          <Interface isPageLoaded={this.state.isLoaded} handleMenuOpen={this.handleMenuOpen}/>\r\n          <MenuPage menuPageClass={this.state.menuPageClass} handleMenuOpen={this.handleMenuOpen} isMenuOpened={this.state.isMenuOpened}/>\r\n          </Router>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}